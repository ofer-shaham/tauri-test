
ARG CENTOS_VERSION=7.9.2009
FROM centos:$CENTOS_VERSION

ARG NVM_VERSION=0.39.2
ARG NODE_VERSION=16.18.0

# Update and install dependencies
RUN sed -i 's|^mirrorlist=|#mirrorlist=|g' /etc/yum.repos.d/CentOS-Base.repo && \
    sed -i 's|^#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-Base.repo && \
    yum -y update && \
    yum install -y epel-release && \
    yum install -y \
        webkitgtk4-devel \
        openssl-devel \
        curl \
        wget \
        squashfs-tools \
        gcc \
        gcc-c++ \
        make \
        file \
        librsvg2-devel

RUN useradd -u 1000 docker
USER docker
ENV HOME=/home/docker

# Install NVM
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v$NVM_VERSION/install.sh | bash && \
    source $HOME/.nvm/nvm.sh && \
    nvm install $NODE_VERSION && \
    nvm use node

# Install Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

ENV PATH=$HOME/.nvm/versions/node/v$NODE_VERSION/bin:$PATH
ENV PATH=$HOME/.cargo/bin:$PATH

# Install Tauri CLI
RUN cargo install tauri-cli


# Set the working directory
WORKDIR /app

#################### delete: RUN apt-get install libgtk-3-dev
# Install pnpm globally
# RUN npm install -g pnpm

RUN pnpm create tauri-app my-tauri-app --template react-ts --yes --no-telemetry && \
    cd my-tauri-app && pnpm install

# Change directory to the newly created Tauri app
WORKDIR /app/my-tauri-app

# Build the Tauri application
RUN ls -la

# Add the AppImage target for Rust
# RUN rustup target add x86_64-unknown-linux-gnu

# Create the AppImage
RUN pnpm tauri build  

# Create an output directory for artifacts
RUN mkdir -p /app/output
RUN ls -la  
RUN ls -la  src-tauri/
# Copy the AppImage to the output directory
RUN cp src-tauri/target/release/my-tauri-app-*.AppImage /app/output/

# Set the command to keep the container running (optional)
CMD ["tail", "-f", "/dev/null"]
