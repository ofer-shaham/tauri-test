# Start with the base image for cross-compilation
FROM ubuntu:18.04

# Set environment variables for Rust and GLIBC
ENV INPUT_TARGET=x86_64-unknown-linux-gnu
ENV INPUT_TOOLCHAIN=stable
ENV GLIBC_VERSION=2.25

# Install necessary packages
RUN apt-get update && \
    apt-get install -y \
    build-essential \
    curl \
    wget \
    file \
    libgtk-3-dev \
    libwebkit2gtk-4.0-dev \
    libappindicator3-dev \
    librsvg2-dev \
    libssl-dev \
    libsqlite3-dev \
    gawk \
    xz-utils \
    && apt-get clean

# Download and install the specified version of GLIBC
RUN curl -O https://ftp.gnu.org/gnu/libc/glibc-$GLIBC_VERSION.tar.xz && \
    tar -xf glibc-$GLIBC_VERSION.tar.xz && \
    mkdir glibc-$GLIBC_VERSION/build && \
    cd glibc-$GLIBC_VERSION/build && \
    ../configure --prefix=/opt/glibc-$GLIBC_VERSION-install && \
    make -j && \
    make install && \
    cd ../../ && \
    rm -rf glibc-$GLIBC_VERSION glibc-$GLIBC_VERSION.tar.xz

# Set environment variables for the newly installed GLIBC
ENV LD_LIBRARY_PATH=/opt/glibc-$GLIBC_VERSION-install/lib:$LD_LIBRARY_PATH
ENV PATH=/opt/glibc-$GLIBC_VERSION-install/bin:$PATH

# Install Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

# Add Rust to PATH
ENV PATH="/root/.cargo/bin:${PATH}"

# Install Rust targets and toolchains
RUN rustup target add "$INPUT_TARGET" && \
    rustup toolchain install --force-non-host "$INPUT_TOOLCHAIN"

# Download and install Node.js
RUN wget https://nodejs.org/dist/v19.8.1/node-v19.8.1-linux-x64.tar.xz && \
    tar -Jxvf ./node-v19.8.1-linux-x64.tar.xz && \
    mv node-v19.8.1-linux-x64 /usr/local/node && \
    rm node-v19.8.1-linux-x64.tar.xz && \
    ln -s /usr/local/node/bin/node /usr/bin/node && \
    ln -s /usr/local/node/bin/npm /usr/bin/npm && \
    npm install -g pnpm

# Copy build script and run it (if applicable)
# COPY build.sh /usr/local/bin/build.sh
# RUN chmod +x /usr/local/bin/build.sh

# Set the working directory
WORKDIR /project

# Default command (optional)
CMD ["bash"]
